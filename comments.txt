TO DO

messages

date format

Organize sidebar

Remove useless elements

Search bar for diagnostic



DONE

Table with diagnostic options

Translated models and add unique names to the fields so they won't be miss recognized

Validate patient form:
    This might require to get a list of inputs with more than the ones from the patient form

Finish Backend:
    create patient   GET POST redirect user to patient list page
    update patient   GET POST
    list patient     GET

Front for patient list

display submit button after fetch

Submit button should execute a function which validates all fields to be sent
so the form wont be rejected. If one of them isn't valid it should point the 
user to that specific section and highlight the invalid input.

Finish evolution section and go on to tests

Specify a height for the patient form 

Diagnostic

    select 

    create


Evolucion    optional

    create  display form


Patient Test         optional

    create  display form

    select and create

    create and create

Fetch for diagnostic as well as selecting and adding in diagnostic options

OTHER


len all second level lis = 508


submitting fetch forms:

The submitting function will check the specific fields. If they are valid, they 
will be sumbitted. Otherwise, the first invalid related input will be highlighted


Submitting Evolution

There is only one field so it shouldn't be forgotten, therefore the required attribute 
could be removed


Submitting patient form

Since this would be the last action, once the specific fields are validated, the 
required attribute should be removed from all the other fields to allow the form to be 
submitted





function validateInputs('form-tag-class') {

}

get list of specific inputs

check for an invalid input to execute the alert function over it

    alert function:

    select the message to be displayed  <---

    add and remove classes to take the user to that specific section  <---

    display message over the invalid input

if not invalid input:

    remove required attribute ---> not always 

    submit --> break

    

In the backend I shouldn't take in to account fetch forms

Take this django html template and provide a JavaScript code which does the following:
1. fetch a list of objects from "http://127.0.0.1:8000/patient/list".
2. Given a nPatientPerPage variable which will be an integer number; if the length of 
the object list doesn't exceed this number, it will populate the tbody element with  
all the objects in the list using the comented structure in the Django html previously 
provided for each object. Otherwise, It will divide the objects in groups of nPatientPerPage 
objects each and create a pagination for those groups.


containerH = 100vh-265px
n = containerH//62.5px




















MATEO SALAZAR
Medellín | +57 3197012975 | mateoslb70@gmail.com
PROFILE
Committed and dedicated software developer with high attention to detail.
I am looking for joining a team to work in a big and challenging project where I can apply my skills as well as develop new ones while working around people with even more knowledge and experience than I have.
It is easy for me to teach and be taught, what makes teamwork something enjoyable for me. However, most of my experience comes from creating and developing apps on my own, hence, I have had to push myself to overcome any problem or error by myself.
EMPLOYMENT HISTORY

Feb, 2023 - Present	Backend developer  
·	Developed the backend system of a lottery site. This application allows customers to select several numbers from a certain lottery’s remaining ones and pay through ePayco's gateway (API used). On the other hand, users can have multiple lotteries and customize all the details such as prices, number of tickets, etc.

Jan, 2023 - Present	Backend developer  
Built an e-commerce website which includes a CRUD management panel that was made with Django, and a main interface for the clients made with React. These two components interchange information through an API built upon Django Rest Framework.

Sep, 2022 - Feb, 2023	Fullstack developer  
·	Created and deployed app for scheduling appointments from scratch with Django, HTML5, CSS and Bootstrap. This app allows users to register with their phone number, add some personal information and book appointments after the time slots set by the owner.

Oct, 2022 - Feb, 2023	Frontend developer  
Recreated landing pages after some given photoshop designs using HTML5, CSS and Materialize mainly.

Jul, 2020 - Nov 2020	Multitasking employee  
Designed system for creating bills in no time by adding the customer products and its quantity, then the app took the price of each product from a modifiable table and returned the bill with all the details.

TECNOLOGIES
Python, JavaScript, Django, React, Git/GitHub, HTML, CSS, Bootstrap, scikit-learn, Pandas, NumPy.
LANGUAGES
English – C1 level 
Spanish – Native speaker
EDUCATION
Jul 2019 – Dec 2022	Ingeniero biomédico, Medellín, Instituto Tecnológico metropolitano (ITM)
Feb 2015 – Jun 2018	Maestro en música, Medellín, Universidad de Antioquia
LINKS
Linkedin	https://www.linkedin.com/in/mateo-salazar-46297622b
GitHub	https://github.com/matsl92
REFRENCES
Camilo Henao	+57 3117437186 – camilohenaoalvarez@gmail.com

